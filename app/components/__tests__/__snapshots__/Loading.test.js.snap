// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Loading should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Loading
    classes={
      Object {
        "progress": "sampleProgress",
        "root": "sampleRoot",
      }
    }
    isLoading={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "classes": Object {
        "progress": "sampleProgress",
        "root": "sampleRoot",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "classes": Object {
          "progress": "sampleProgress",
          "root": "sampleRoot",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Loading should render PaperElement 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PaperElement
    classes={
      Object {
        "progress": "sampleProgress",
        "root": "sampleRoot",
      }
    }
    isLoading={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(Paper)
        className="sampleRoot"
        elevation={4}
      >
        <WithStyles(CircularProgress)
          className="sampleProgress"
          color="secondary"
          size={50}
        />
      </WithStyles(Paper)>,
      "style": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(CircularProgress)
          className="sampleProgress"
          color="secondary"
          size={50}
        />,
        "className": "sampleRoot",
        "elevation": 4,
        "style": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "sampleProgress",
          "color": "secondary",
          "size": 50,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(Paper)
          className="sampleRoot"
          elevation={4}
        >
          <WithStyles(CircularProgress)
            className="sampleProgress"
            color="secondary"
            size={50}
          />
        </WithStyles(Paper)>,
        "style": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(CircularProgress)
            className="sampleProgress"
            color="secondary"
            size={50}
          />,
          "className": "sampleRoot",
          "elevation": 4,
          "style": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "sampleProgress",
            "color": "secondary",
            "size": 50,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
