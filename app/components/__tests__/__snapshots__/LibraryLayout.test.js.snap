// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LibraryLayout should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LibraryLayout
    closeLibrary={[MockFunction]}
    openComic={[MockFunction]}
    root="."
    saveContentDataToParent={[MockFunction]}
    updateRoot={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <LibraryHeader
          onContentClick={[Function]}
          position="fixed"
          title="Library"
        >
          <div>
            <WithStyles(IconButton)
              color="primary"
              onClick={[Function]}
            >
              <FaFolderOpen />
            </WithStyles(IconButton)>
            <WithStyles(IconButton)
              color="primary"
              onClick={[Function]}
            >
              <FaLevelUp />
            </WithStyles(IconButton)>
            <WithStyles(IconButton)
              color="primary"
              onClick={[MockFunction]}
              style={
                Object {
                  "background": "#ef5350",
                }
              }
            >
              <FaClose />
            </WithStyles(IconButton)>
          </div>
        </LibraryHeader>,
        null,
      ],
      "className": "library",
      "style": Object {
        "marginTop": "64px",
        "maxHeight": "calc(90vh - 64px)",
        "overflowY": "auto",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div>
            <WithStyles(IconButton)
              color="primary"
              onClick={[Function]}
            >
              <FaFolderOpen />
            </WithStyles(IconButton)>
            <WithStyles(IconButton)
              color="primary"
              onClick={[Function]}
            >
              <FaLevelUp />
            </WithStyles(IconButton)>
            <WithStyles(IconButton)
              color="primary"
              onClick={[MockFunction]}
              style={
                Object {
                  "background": "#ef5350",
                }
              }
            >
              <FaClose />
            </WithStyles(IconButton)>
          </div>,
          "onContentClick": [Function],
          "position": "fixed",
          "title": "Library",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(IconButton)
                color="primary"
                onClick={[Function]}
              >
                <FaFolderOpen />
              </WithStyles(IconButton)>,
              <WithStyles(IconButton)
                color="primary"
                onClick={[Function]}
              >
                <FaLevelUp />
              </WithStyles(IconButton)>,
              <WithStyles(IconButton)
                color="primary"
                onClick={[MockFunction]}
                style={
                  Object {
                    "background": "#ef5350",
                  }
                }
              >
                <FaClose />
              </WithStyles(IconButton)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FaFolderOpen />,
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FaLevelUp />,
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FaClose />,
                "color": "primary",
                "onClick": [MockFunction],
                "style": Object {
                  "background": "#ef5350",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <LibraryHeader
            onContentClick={[Function]}
            position="fixed"
            title="Library"
          >
            <div>
              <WithStyles(IconButton)
                color="primary"
                onClick={[Function]}
              >
                <FaFolderOpen />
              </WithStyles(IconButton)>
              <WithStyles(IconButton)
                color="primary"
                onClick={[Function]}
              >
                <FaLevelUp />
              </WithStyles(IconButton)>
              <WithStyles(IconButton)
                color="primary"
                onClick={[MockFunction]}
                style={
                  Object {
                    "background": "#ef5350",
                  }
                }
              >
                <FaClose />
              </WithStyles(IconButton)>
            </div>
          </LibraryHeader>,
          null,
        ],
        "className": "library",
        "style": Object {
          "marginTop": "64px",
          "maxHeight": "calc(90vh - 64px)",
          "overflowY": "auto",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div>
              <WithStyles(IconButton)
                color="primary"
                onClick={[Function]}
              >
                <FaFolderOpen />
              </WithStyles(IconButton)>
              <WithStyles(IconButton)
                color="primary"
                onClick={[Function]}
              >
                <FaLevelUp />
              </WithStyles(IconButton)>
              <WithStyles(IconButton)
                color="primary"
                onClick={[MockFunction]}
                style={
                  Object {
                    "background": "#ef5350",
                  }
                }
              >
                <FaClose />
              </WithStyles(IconButton)>
            </div>,
            "onContentClick": [Function],
            "position": "fixed",
            "title": "Library",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(IconButton)
                  color="primary"
                  onClick={[Function]}
                >
                  <FaFolderOpen />
                </WithStyles(IconButton)>,
                <WithStyles(IconButton)
                  color="primary"
                  onClick={[Function]}
                >
                  <FaLevelUp />
                </WithStyles(IconButton)>,
                <WithStyles(IconButton)
                  color="primary"
                  onClick={[MockFunction]}
                  style={
                    Object {
                      "background": "#ef5350",
                    }
                  }
                >
                  <FaClose />
                </WithStyles(IconButton)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <FaFolderOpen />,
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <FaLevelUp />,
                  "color": "primary",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <FaClose />,
                  "color": "primary",
                  "onClick": [MockFunction],
                  "style": Object {
                    "background": "#ef5350",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
